// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: usuarios.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO usuario(nombre, apellido, pais) VALUES ($1, $2, $3)
RETURNING id_usuario, nombre, apellido, pais
`

type CreateUserParams struct {
	Nombre   string `json:"nombre"`
	Apellido string `json:"apellido"`
	Pais     string `json:"pais"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (Usuario, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.Nombre, arg.Apellido, arg.Pais)
	var i Usuario
	err := row.Scan(
		&i.IDUsuario,
		&i.Nombre,
		&i.Apellido,
		&i.Pais,
	)
	return i, err
}

const updateUser = `-- name: UpdateUser :exec
UPDATE usuario SET nombre=$2, apellido=$3, pais=$4 WHERE id_usuario = $1
`

type UpdateUserParams struct {
	IDUsuario int32  `json:"id_usuario"`
	Nombre    string `json:"nombre"`
	Apellido  string `json:"apellido"`
	Pais      string `json:"pais"`
}

func (q *Queries) UpdateUser(ctx context.Context, arg UpdateUserParams) error {
	_, err := q.db.ExecContext(ctx, updateUser,
		arg.IDUsuario,
		arg.Nombre,
		arg.Apellido,
		arg.Pais,
	)
	return err
}
